mdz - Mandelbrot Deep Zoom

http://jwm-art.net/mdz/

mdz is a Mandelbrot-Set image generator which can use arbitrary precision
maths to zoom in as deep as you have patience for.

mdz is a fork from gkII ( http://www.jwm-art.net/gkII ) which in turn
is a fork of gfract ( http://code.google.com/p/gfract/ ).

mdz has stripped out most of the features from gkII and improves
performance with multi-threaded rendering, and adds the ability to
zoom really deep with arbitrary precision math.

the code of mdz-0.0.9 is now a significant departure from gkII.


Command Line Options
---------------------

The command line options are specifically for those cases where you
want to render an image without interacting with the program at all.
You could view the gui of mdz as simply a tool for exploring the M-Set
and then use the command line options to render a final image once
something sufficiently interesting has been located in the explorer.


Multi-Precision Maths Routines
-------------------------------

By default the multi-precision maths routines are turned off. This means
you must turn them on when needed. There are two ways to find out when you
need to turn them on. The first is just to look at the rendered image.
If it appears to be composed of clunky blocks instead of tiny pixels then 
the multi-precision maths routines need activating.

Activate the multi-precision maths routines via the attributes dialog.

You will also encounter clunky blocks even with the multi-precision maths
routines active. This is because mdz does not automatically set how much
precision the multi-precision maths routines use, you must choose a value
yourself.

However, mdz does calculate a value which is the scant minimum amount of
precision you could get away with to render an image. The scant minimum
value only provides enough precision for poor quality renders so choose
always choose a higher value for final renders.


WARNING: the arbitrary maths routines slow rendering to a crawl and
the deeper you zoom, and the more precision you ask for, the slower the
calculations will become.

To counter this, reduce the image size down to 240 x 180 until you have
located your image and then save the settings (first making sure you have
set the precision above the scant minimum). You can then render the image
from the commandline specifying how large it should be and anti-aliasing
options etc.


Multi-threading
----------------

The default number of rendering threads is 2 for conservative reasons.
mdz used to use 64 threads by default but was reduced to 2 so that the
system running mdz remains responsive.

However, it seems that mdz will run significantly faster if you increase
the number of rendering threads (either from the command line or from the
attributes dialog) at the cost of making the system running mdz
unresponsive.


Colours + Palettes
-------------------

mdz can read fractint .map colour palette files and can save them too. It
is also possible to read the palette section from within an MDZ settings
file without loading the settings (and vice-versa).


Colour Cycling and Anti-Aliasing
---------------------------------

without anti-aliasing, there are no problems with colour cycling. with
anti-aliasing, don't be surprised if the palette display does not update
in time with the cycling. general rule of thumb: don't push it ;-)



mdz development
----------------

It is currently not planned for mdz to render anything than the Mandelbrot
and Julia sets. Nor are any fanciful colouring methods (perhaps the smooth
colouring variant).

mdz is supposed to be a tool for exploring the Mandelbrot set without too
many distractions - it is believed by the author that the Mandelbrot Set 
is sufficiently complex that it should be possible to find interesting 
images within it that do not require fanciful colouring methods.

